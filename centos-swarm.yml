---
- name: Install Docker
  hosts: all
#  connection: local
#  gather_facts: no

  roles:
    - role: art-docker-centos
      become: yes

  tasks:
    - name: Configure firewall rules for Swarm
      import_tasks: tasks/swarm-fw-rules.yml

- name: Init Swarm
  hosts: swarm-host-1
  tasks:
    - name: Get docker info
      shell: docker info
      register: docker_info
      changed_when: false

    - name: Calc swarm leader IP
      set_fact:
        host_1_interface_ip: "{{ host_interface_ip }}"

    - name: Create primary swarm manager
      shell: docker swarm init --advertise-addr {{ host_1_interface_ip }}
      when: "docker_info.stdout.find('Swarm: inactive') != -1"

    - name: Get docker swarm manager token
      shell: docker swarm join-token -q manager
      register: manager_token

    - name: Get docker swarm worker token
      shell: docker swarm join-token -q worker
      register: worker_token

- name: Add Swarm Managers
  hosts: swarm-managers
  tasks:
    - name: Get docker info
      shell: docker info
      register: docker_info
      changed_when: false

    - name: Join as a manager
      shell: "docker swarm join --token {{ hostvars['swarm-host-1']['manager_token']['stdout'] }} {{ hostvars['swarm-host-1']['host_1_interface_ip'] }}:2377"
      when: "docker_info.stdout.find('Swarm: inactive') != -1"
      retries: 3
      delay: 20

- name: Add Swarm Workers
  hosts: swarm-workers
  tasks:
    - name: Get docker info
      shell: docker info
      register: docker_info
      changed_when: false

    - name: Join as a worker
      shell: "docker swarm join --token {{ hostvars['swarm-host-1']['worker_token']['stdout'] }} {{ hostvars['swarm-host-1']['host_1_interface_ip'] }}:2377"
      when: "docker_info.stdout.find('Swarm: inactive') != -1"
      retries: 3
      delay: 20
